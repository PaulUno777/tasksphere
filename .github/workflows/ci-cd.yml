name: TaskSphere CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "20.11.0"
  GO_VERSION: "1.24.0"
jobs:
  # Lint and format check
  go-lint-and-format:
    name: Go Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install linters and formatters
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install mvdan.cc/gofumpt@latest

      - name: Run golangci-lint
        working-directory: ./tasksphere-api
        run: golangci-lint run

      - name: Check Go formatting with gofumpt
        working-directory: ./tasksphere-api
        run: gofumpt -l . | grep . && exit 1 || echo "âœ… Code is formatted"

  # Backend build and test
  go-backend-build-test:
    name: Go Backend Build & Test
    runs-on: ubuntu-latest
    needs: go-lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Restore Go dependencies
        working-directory: ./tasksphere-api
        run: go mod download

      - name: Build Go backend
        working-directory: ./tasksphere-api
        run: go build -o bin/app ./cmd/main.go

      - name: Run Go tests
        working-directory: ./tasksphere-api
        run: go test -cover ./...

      - name: Upload Go build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./tasksphere-api/bin/app
          retention-days: 7

  # Security audit for Go backend
  go-security-audit:
    name: Go Security Audit
    runs-on: ubuntu-latest
    needs: go-lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run gosec (Security static analysis)
        working-directory: ./tasksphere-api
        run: gosec ./...

  # Dependency check for Go backend
  go-dependency-check:
    name: Go Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Check Go modules for updates
        working-directory: ./tasksphere-api
        run: go list -u -m -json all

      - name: Check Go module licenses
        working-directory: ./tasksphere-api
        run: go install github.com/google/go-licenses@latest && go-licenses check ./...