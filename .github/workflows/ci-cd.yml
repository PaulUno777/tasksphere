name: TaskSphere CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "20.11.0"

jobs:
  # Lint and format check
  lint-and-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"
          cache-dependency-path: "backend/yarn.lock"

      - name: Install backend dependencies
        working-directory: ./backend
        run: yarn install

      - name: Run ESLint
        working-directory: ./backend
        run: yarn lint

      - name: Check Prettier formatting
        working-directory: ./backend
        run: yarn format:check

  # Backend build and test
  backend-build:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    needs: lint-and-format

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: "backend/yarn.lock"

      - name: Install dependencies
        working-directory: ./backend
        run: yarn install --frozen-lockfile

      - name: Build backend
        working-directory: ./backend
        run: yarn build

      - name: Run tests
        working-directory: ./backend
        run: yarn test

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: backend-build
          path: ./backend/dist
          retention-days: 7

  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: lint-and-format

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"
          cache-dependency-path: "backend/yarn.lock"

      - name: Install dependencies
        working-directory: ./backend
        run: yarn install --frozen-lockfile

      - name: Run security audit
        working-directory: ./backend
        run: yarn audit --level moderate

  # Dependency check
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"
          cache-dependency-path: "backend/yarn.lock"

      - name: Check for outdated dependencies
        working-directory: ./backend
        run: yarn outdated || true

      - name: License check
        working-directory: ./backend
        run: |
          yarn global add license-checker
          license-checker --summary
